#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InetGlobalIndo.ERP.MTJ.DBFactory.ERPManSys
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="SIP_ERP_Management_System")]
	public partial class DBSalesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMsAirline(MsAirline instance);
    partial void UpdateMsAirline(MsAirline instance);
    partial void DeleteMsAirline(MsAirline instance);
    #endregion
		
		public DBSalesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBSalesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBSalesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBSalesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MsAirline> MsAirlines
		{
			get
			{
				return this.GetTable<MsAirline>();
			}
		}
	}
	
	[Table(Name="dbo.MsAirlines")]
	public partial class MsAirline : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AirlineCode;
		
		private string _AirlineName;
		
		private string _Address;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _Email;
		
		private string _Remark;
		
		private System.Nullable<char> _fgActive;
		
		private string _InsertBy;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private string _EditBy;
		
		private System.Nullable<System.DateTime> _EditDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAirlineCodeChanging(string value);
    partial void OnAirlineCodeChanged();
    partial void OnAirlineNameChanging(string value);
    partial void OnAirlineNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnfgActiveChanging(System.Nullable<char> value);
    partial void OnfgActiveChanged();
    partial void OnInsertByChanging(string value);
    partial void OnInsertByChanged();
    partial void OnInsertDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInsertDateChanged();
    partial void OnEditByChanging(string value);
    partial void OnEditByChanged();
    partial void OnEditDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEditDateChanged();
    #endregion
		
		public MsAirline()
		{
			OnCreated();
		}
		
		[Column(Storage="_AirlineCode", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AirlineCode
		{
			get
			{
				return this._AirlineCode;
			}
			set
			{
				if ((this._AirlineCode != value))
				{
					this.OnAirlineCodeChanging(value);
					this.SendPropertyChanging();
					this._AirlineCode = value;
					this.SendPropertyChanged("AirlineCode");
					this.OnAirlineCodeChanged();
				}
			}
		}
		
		[Column(Storage="_AirlineName", DbType="VarChar(100)")]
		public string AirlineName
		{
			get
			{
				return this._AirlineName;
			}
			set
			{
				if ((this._AirlineName != value))
				{
					this.OnAirlineNameChanging(value);
					this.SendPropertyChanging();
					this._AirlineName = value;
					this.SendPropertyChanged("AirlineName");
					this.OnAirlineNameChanged();
				}
			}
		}
		
		[Column(Storage="_Address", DbType="VarChar(200)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[Column(Storage="_Phone", DbType="VarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="VarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_Remark", DbType="VarChar(200)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[Column(Storage="_fgActive", DbType="VarChar(1)")]
		public System.Nullable<char> fgActive
		{
			get
			{
				return this._fgActive;
			}
			set
			{
				if ((this._fgActive != value))
				{
					this.OnfgActiveChanging(value);
					this.SendPropertyChanging();
					this._fgActive = value;
					this.SendPropertyChanged("fgActive");
					this.OnfgActiveChanged();
				}
			}
		}
		
		[Column(Storage="_InsertBy", DbType="VarChar(256)")]
		public string InsertBy
		{
			get
			{
				return this._InsertBy;
			}
			set
			{
				if ((this._InsertBy != value))
				{
					this.OnInsertByChanging(value);
					this.SendPropertyChanging();
					this._InsertBy = value;
					this.SendPropertyChanged("InsertBy");
					this.OnInsertByChanged();
				}
			}
		}
		
		[Column(Storage="_InsertDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[Column(Storage="_EditBy", DbType="VarChar(256)")]
		public string EditBy
		{
			get
			{
				return this._EditBy;
			}
			set
			{
				if ((this._EditBy != value))
				{
					this.OnEditByChanging(value);
					this.SendPropertyChanging();
					this._EditBy = value;
					this.SendPropertyChanged("EditBy");
					this.OnEditByChanged();
				}
			}
		}
		
		[Column(Storage="_EditDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EditDate
		{
			get
			{
				return this._EditDate;
			}
			set
			{
				if ((this._EditDate != value))
				{
					this.OnEditDateChanging(value);
					this.SendPropertyChanging();
					this._EditDate = value;
					this.SendPropertyChanged("EditDate");
					this.OnEditDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
