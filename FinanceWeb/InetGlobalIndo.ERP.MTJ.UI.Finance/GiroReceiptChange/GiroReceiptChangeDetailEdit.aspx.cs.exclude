using System;
using System.Collections;
using System.Configuration;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Xml.Linq;
using InetGlobalIndo.ERP.MTJ.DBFactory.ERPManSys;
using InetGlobalIndo.ERP.MTJ.SystemConfig;
using InetGlobalIndo.ERP.MTJ.Common;
using InetGlobalIndo.ERP.MTJ.Common.Encryption;
using InetGlobalIndo.ERP.MTJ.BusinessRule.Sales;
using InetGlobalIndo.ERP.MTJ.BusinessRule.Finance;
using InetGlobalIndo.ERP.MTJ.DataMapping;
using InetGlobalIndo.ERP.MTJ.BusinessRule.Purchasing;
using InetGlobalIndo.ERP.MTJ.Common.Enum;
using InetGlobalIndo.ERP.MTJ.BusinessRule;

public partial class GiroReceiptChangeDetailEdit : PageBase
{
    private FINChangeGiroInBL _finChangeGiroIn = new FINChangeGiroInBL();
    private FINGiroInBL _finGiroIn = new FINGiroInBL();
    private BankBL _bank = new BankBL();

    private string _detailPage = "GiroReceiptChangeDetail.aspx";

    private string _codeKey = "code";
    private string _giroKey = "GiroNo";

    private NameValueCollectionExtractor _nvcExtractor;

    protected void Page_Load(object sender, EventArgs e)
    {
        _nvcExtractor = new NameValueCollectionExtractor(Request.QueryString);

        if (!this.Page.IsPostBack == true)
        {
            this.WarningLabel.Text = "";
            this.PageTitleLiteral.Text = "Giro Receipt - Change";

            this.SaveButton.ImageUrl = ApplicationConfig.HomeWebAppURL + "images/save.jpg";
            this.CancelButton.ImageUrl = ApplicationConfig.HomeWebAppURL + "images/cancel.jpg";
            this.ResetButton.ImageUrl = ApplicationConfig.HomeWebAppURL + "images/reset.jpg";

            this.DateTextBox.Attributes.Add("ReadOnly", "True");
            this.DueDateTextBox.Attributes.Add("ReadOnly", "True");
            this.TransNoTextBox.Attributes.Add("ReadOnly", "True");
            this.CurrTextBox.Attributes.Add("ReadOnly", "True");
            this.RateTextBox.Attributes.Add("ReadOnly", "True");
            this.AmountForexTextBox.Attributes.Add("ReadOnly", "True");
            this.BankGiroTextBox.Attributes.Add("ReadOnly", "True");

            this.ShowOldGiro();

            this.ShowData();
        }
    }

    private void ShowData()
    {
        FINChangeGiroInDt _finChangeGiroInDt = this._finChangeGiroIn.GetSingleFINChangeGiroInDt(Rijndael.Decrypt(this._nvcExtractor.GetValue(this._codeKey), ApplicationConfig.EncryptionKey), Rijndael.Decrypt(this._nvcExtractor.GetValue(this._giroKey), ApplicationConfig.EncryptionKey));

        this.TransNoTextBox.Text = _finChangeGiroInDt.TransNmbr;
        this.DateTextBox.Text = DateFormMapper.GetValue(_finChangeGiroInDt.ReceiptDate);
        this.DueDateTextBox.Text = DateFormMapper.GetValue(_finChangeGiroInDt.DueDate);
        this.OldGiroDropDownList.SelectedValue = _finChangeGiroInDt.OldGiro;
        this.BankGiroTextBox.Text = _bank.GetBankNameByCode(_finChangeGiroInDt.BankGiro);
        this.CurrTextBox.Text = _finChangeGiroInDt.CurrCode;
        this.RateTextBox.Text = _finChangeGiroInDt.ForexRate.ToString("#,###.##");
        this.AmountForexTextBox.Text = _finChangeGiroInDt.AmountForex.ToString("#,###.##");
    }

    private void ShowOldGiro()
    {
        FINChangeGiroInHd _finChangeGiroInHd = this._finChangeGiroIn.GetSingleFINChangeGiroInHd(Rijndael.Decrypt(this._nvcExtractor.GetValue(this._codeKey), ApplicationConfig.EncryptionKey));

        string supp = _finChangeGiroInHd.SuppCode;
        string cust = _finChangeGiroInHd.CustCode;

        this.OldGiroDropDownList.Items.Clear();
        this.OldGiroDropDownList.DataTextField = "GiroNo";
        this.OldGiroDropDownList.DataValueField = "GiroNo";
        if (supp != null)
        {
            this.OldGiroDropDownList.DataSource = this._finGiroIn.GetListForDDL(supp);
        }
        else if (cust != null)
        {
            this.OldGiroDropDownList.DataSource = this._finGiroIn.GetListForDDL(cust);
        }
        this.OldGiroDropDownList.DataBind();
        this.OldGiroDropDownList.Items.Insert(0, new ListItem("[Choose One]", "null"));
    }

    protected void SaveButton_Click(object sender, ImageClickEventArgs e)
    {
        FINChangeGiroInDt _finChangeGiroInDt = this._finChangeGiroIn.GetSingleFINChangeGiroInDt(Rijndael.Decrypt(this._nvcExtractor.GetValue(this._codeKey), ApplicationConfig.EncryptionKey), Rijndael.Decrypt(this._nvcExtractor.GetValue(this._giroKey), ApplicationConfig.EncryptionKey));
        FINGiroIn _finGiroIn = this._finGiroIn.GetSingleFINGiroIn(Rijndael.Decrypt(this._nvcExtractor.GetValue(this._giroKey), ApplicationConfig.EncryptionKey));

        _finChangeGiroInDt.ReceiptDate = DateFormMapper.GetValue(this.DateTextBox.Text);
        _finChangeGiroInDt.DueDate = DateFormMapper.GetValue(this.DueDateTextBox.Text);
        _finChangeGiroInDt.OldGiro = this.OldGiroDropDownList.SelectedValue;
        _finChangeGiroInDt.TransNmbr = this.TransNoTextBox.Text;
        _finChangeGiroInDt.BankGiro = _finGiroIn.BankGiro;
        _finChangeGiroInDt.CurrCode = this.CurrTextBox.Text;
        _finChangeGiroInDt.ForexRate = Convert.ToDecimal(this.RateTextBox.Text);
        _finChangeGiroInDt.AmountForex = Convert.ToDecimal(this.AmountForexTextBox.Text);

        bool _result = this._finChangeGiroIn.EditFINChangeGiroInDt(_finChangeGiroInDt);

        if (_result == true)
        {
            Response.Redirect(this._detailPage + "?" + this._codeKey + "=" + HttpUtility.UrlEncode(this._nvcExtractor.GetValue(this._codeKey)));
        }
        else
        {
            this.WarningLabel.Text = "Your Failed Edit Data";
        }
    }

    protected void CancelButton_Click(object sender, ImageClickEventArgs e)
    {
        Response.Redirect(this._detailPage + "?" + this._codeKey + "=" + HttpUtility.UrlEncode(this._nvcExtractor.GetValue(this._codeKey)));
    }

    protected void ResetButton_Click(object sender, ImageClickEventArgs e)
    {
        this.ShowData();
    }

    protected void OldGiroDropDownList_SelectedIndexChanged(object sender, EventArgs e)
    {
        FINGiroIn _finGiroIn = this._finGiroIn.GetSingleFINGiroIn(Rijndael.Decrypt(this._nvcExtractor.GetValue(this._giroKey), ApplicationConfig.EncryptionKey));

        this.DateTextBox.Text = DateFormMapper.GetValue(_finGiroIn.ReceiptDate);
        this.DueDateTextBox.Text = DateFormMapper.GetValue(_finGiroIn.DueDate);
        this.BankGiroTextBox.Text = _bank.GetBankNameByCode(_finGiroIn.BankGiro);
        this.CurrTextBox.Text = _finGiroIn.CurrCode;
        this.RateTextBox.Text = _finGiroIn.ForexRate.ToString("#,###.##");
        this.AmountForexTextBox.Text = _finGiroIn.AmountForex.ToString("#,###.##");
    }
}
